# Generated by Django 5.1.6 on 2025-06-09 15:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=100, unique=True)),
                ('sensor_type', models.CharField(choices=[('EM', 'Energy Meter'), ('AQ', 'Air Quality'), ('OC', 'Occupancy'), ('RD', 'Radar')], max_length=2)),
                ('floor', models.IntegerField(blank=True, null=True)),
                ('office', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RadarData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(max_length=100)),
                ('sn', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('num_targets', models.IntegerField()),
                ('coordinates', models.JSONField()),
                ('raw_payload', models.JSONField()),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='radar_data', to='server_api.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='OccupancyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(blank=True, max_length=50, null=True)),
                ('frame_version', models.CharField(blank=True, max_length=10, null=True)),
                ('battery', models.IntegerField(blank=True, null=True)),
                ('firmware_version', models.CharField(blank=True, max_length=20, null=True)),
                ('peripheral_support', models.CharField(blank=True, max_length=50, null=True)),
                ('salt', models.CharField(blank=True, max_length=10, null=True)),
                ('digital_signature', models.CharField(blank=True, max_length=10, null=True)),
                ('usage', models.CharField(blank=True, max_length=10, null=True)),
                ('serial_number', models.IntegerField(blank=True, null=True)),
                ('entries', models.IntegerField(blank=True, null=True)),
                ('exits', models.IntegerField(blank=True, null=True)),
                ('random_number', models.CharField(blank=True, max_length=10, null=True)),
                ('raw_data', models.TextField()),
                ('rssi', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('total_entries', models.IntegerField(default=0)),
                ('total_exits', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oc_data', to='server_api.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.IntegerField()),
                ('a_current', models.FloatField()),
                ('a_voltage', models.FloatField()),
                ('a_act_power', models.FloatField()),
                ('a_aprt_power', models.FloatField()),
                ('a_pf', models.FloatField()),
                ('a_freq', models.FloatField()),
                ('b_current', models.FloatField()),
                ('b_voltage', models.FloatField()),
                ('b_act_power', models.FloatField()),
                ('b_aprt_power', models.FloatField()),
                ('b_pf', models.FloatField()),
                ('b_freq', models.FloatField()),
                ('c_current', models.FloatField()),
                ('c_voltage', models.FloatField()),
                ('c_act_power', models.FloatField()),
                ('c_aprt_power', models.FloatField()),
                ('c_pf', models.FloatField()),
                ('c_freq', models.FloatField()),
                ('total_current', models.FloatField()),
                ('total_act_power', models.FloatField()),
                ('total_aprt_power', models.FloatField()),
                ('timestamp', models.DateTimeField()),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='em_data', to='server_api.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='AirQualityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(max_length=100)),
                ('quality', models.CharField(max_length=50)),
                ('co2', models.IntegerField()),
                ('temp', models.IntegerField()),
                ('humidity', models.IntegerField()),
                ('voc', models.IntegerField()),
                ('pm2p5', models.FloatField()),
                ('pm10', models.FloatField()),
                ('pm1', models.FloatField()),
                ('pm4', models.FloatField()),
                ('timestamp', models.DateTimeField()),
                ('version', models.CharField(max_length=50)),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aq_data', to='server_api.sensor')),
            ],
        ),
    ]
