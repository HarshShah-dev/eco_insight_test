# Generated by Django 5.1.6 on 2025-07-28 22:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('server_api', '0008_remove_lsg01airqualitydata_pm10_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='WeatherLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default Location', max_length=200)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('timezone', models.CharField(default='Europe/London', max_length=64)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Weather Location',
                'verbose_name_plural': 'Weather Locations',
            },
        ),
        migrations.CreateModel(
            name='WeatherHourly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(db_index=True)),
                ('temperature_2m', models.FloatField(blank=True, null=True)),
                ('apparent_temperature', models.FloatField(blank=True, null=True)),
                ('precipitation', models.FloatField(blank=True, null=True)),
                ('precipitation_probability', models.IntegerField(blank=True, null=True)),
                ('weather_code', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hourly', to='server_api.weatherlocation')),
            ],
            options={
                'indexes': [models.Index(fields=['location', 'time'], name='server_api__locatio_1c4286_idx')],
                'unique_together': {('location', 'time')},
            },
        ),
        migrations.CreateModel(
            name='WeatherDaily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('temperature_2m_min', models.FloatField(blank=True, null=True)),
                ('temperature_2m_max', models.FloatField(blank=True, null=True)),
                ('precipitation_probability_max', models.IntegerField(blank=True, null=True)),
                ('weather_code', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily', to='server_api.weatherlocation')),
            ],
            options={
                'indexes': [models.Index(fields=['location', 'date'], name='server_api__locatio_0d3a97_idx')],
                'unique_together': {('location', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WeatherCurrent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observed_at', models.DateTimeField(db_index=True)),
                ('temperature_2m', models.FloatField(blank=True, null=True)),
                ('apparent_temperature', models.FloatField(blank=True, null=True)),
                ('precipitation', models.FloatField(blank=True, null=True)),
                ('weather_code', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current', to='server_api.weatherlocation')),
            ],
            options={
                'get_latest_by': 'observed_at',
                'indexes': [models.Index(fields=['location', '-observed_at'], name='server_api__locatio_b254d1_idx')],
            },
        ),
    ]
